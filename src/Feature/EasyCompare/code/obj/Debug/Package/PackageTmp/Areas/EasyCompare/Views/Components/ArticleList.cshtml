@inherits Glass.Mapper.Sc.Web.Mvc.GlassView<Sitecore.Feature.EasyCompare.Areas.EasyCompare.IArticles>
@using Sitecore.Feature.EasyCompare.Areas.EasyCompare
@using Sitecore.Globalization

@if (Model != null)
{


    <div class="tiles">
        <div class="generic_title"> @Editable(Model, x => x.Title)</div>
        <div class="generic_snippet"> @Editable(Model, x => x.SubTitle) </div>

        <div class="tile__items">
            <div class="grid ">

                @if (Model.ArticlesList != null && Model.ArticlesList.Any())
                        {
                            foreach (var r in Model.ArticlesList)
                            {
                                var tagclass = string.Empty;
                                foreach (var tag in r.ArticleTags)
                                {

                                    tagclass = tagclass + " al_" + tag.TagName.Replace(' ', '_');
                                }
                        <div class="@tagclass tile__item grid-item articles">
                            <div class="tile__item__details">
                                @if (r.ArticleImage != null)
                                        {

                                            if (Sitecore.Context.PageMode.IsExperienceEditor)
                                            {
                                        @RenderImage(r, x => x.ArticleImage, new { }, true)
                                            }
                                            else
                                            {
                                        <div class="tile__item__thumbnail" style="background-image: url('@r.ArticleImage.Src')"></div>
                                            }
                                        }
                                @if (r.ArticleDate != null)
                                        {
                                        <div class="tile__item__date">

                                            @{System.Globalization.CultureInfo provider = System.Globalization.CultureInfo.InvariantCulture;}
                                            @if (Sitecore.Context.PageMode.IsExperienceEditor)
                                                {
                                                @Editable(r, x => x.ArticleDate, x => x.ArticleDate.ToString("MMMM dd yyyy"))
                                                }
                                                else
                                                {
                                                @Sitecore.DateUtil.FormatDateTime(r.ArticleDate, "dd MMM yyyy", provider)
                                                }
                                        </div>
                                                    }



                                <div class="tile__item__title"><a href="@r.Url">@Editable(r, x => x.Title) </a></div>


                                <div class="tile__item__snippet">@Editable(r, x => x.SubTitle) </div>

                                <div>


                                    <div class="tile__item__read_more">
                                        <a href="@r.Url">@Editable(Model, x => x.ArticleLinkText)</a>
                                    </div>
                                </div>




                            </div>
                        </div>
                                                        }
                                                    }
            </div>
        </div>

        <div class="view-all">
            @RenderLink(Model, x => x.AllArticleLink, new System.Collections.Specialized.NameValueCollection { { "class", "view-all-link" } }, isEditable: true)

        </div>

    </div>


                                                }
                                                else
                                                {
                                                    if (Sitecore.Context.PageMode.IsExperienceEditor)
                                                    {
                                                        @Html.Raw("Enter the Datasource");
                                                    }
                                                }
